{
    "$schema": "http://json-schema.org/schema",
    "type": "object",
    "additionalProperties": false,
    "minProperties": 1,
    "patternProperties": {
        ".*": {
            "$ref": "#/definitions/hero"
        }
    },
    "definitions": {
        "hero": {
            "description": "Hero name",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "colouredName": {
                    "description": "The coloured name that will appear ingame",
                    "type": "string"
                },
                "description": {
                    "description": "The description of the hero",
                    "type": "string"
                },
                "skills": {
                    "description": "The list of skill that the hero has",
                    "type": "object",
                    "additionalProperties": false,
                    "patternProperties": {
                        ".*": {
                            "$ref": "#/definitions/skill"
                        }
                    }
                }
            }
        },
        "skill": {
            "properties": {
                "skill": {
                    "enum": [
                        "CUSTOM"
                    ],
                    "description": "The type of the skill"
                }
            },
            "if": {
                "properties": {
                    "skill": {
                        "const": null
                    }
                }
            },
            "else": {
                "allOf": [
                    {
                        "if": {
                            "properties": {
                                "skill": {
                                    "const": "CUSTOM"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/skills/CUSTOM"
                        }
                    }
                ]
            }
        },
        "trigger": {
            "properties": {
                "type": {
                    "description": "The type of trigger",
                    "type": "string"
                },
                "conditions": {
                    "description": "The list of conditions",
                    "type": "object",
                    "patternProperties": {
                        ".*": {
                            "$ref": "#/definitions/condition"
                        }
                    }
                }
            }
        },
        "condition": {
            "properties": {
                "type": {
                    "enum": [
                        "HEALTH",
                        "CHANCE",
                        "COOLDOWN",
                        "ENTITY",
                        "SIZE",
                        "NOT",
                        "SNEAK",
                        "TIME",
                        "ONGROUND",
                        "GLIDING",
                        "BIOME",
                        "METADATA",
                        "NPC",
                        "WEATHER",
                        "INBLOCK",
                        "WORLD",
                        "TAMED",
                        "FLYING",
                        "HEIGHT",
                        "BLOCK",
                        "ITEM",
                        "OR",
                        "VISIBILITY"
                    ],
                    "description": "The type of the condition"
                },
                "mode": {
                    "description": "The condition mode",
                    "type": "string"
                }
            },
            "if": {
                "properties": {
                    "type": {
                        "const": null
                    }
                }
            },
            "else": {
                "allOf": [
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "HEALTH"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/conditions/HEALTH"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "CHANCE"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/conditions/CHANCE"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "COOLDOWN"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/conditions/COOLDOWN"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "ENTITY"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/conditions/ENTITY"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "SIZE"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/conditions/SIZE"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "NOT"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/conditions/NOT"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "SNEAK"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/conditions/SNEAK"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "TIME"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/conditions/TIME"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "ONGROUND"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/conditions/ONGROUND"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "GLIDING"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/conditions/GLIDING"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "BIOME"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/conditions/BIOME"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "METADATA"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/conditions/METADATA"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "NPC"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/conditions/NPC"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "WEATHER"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/conditions/WEATHER"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "INBLOCK"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/conditions/INBLOCK"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "WORLD"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/conditions/WORLD"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "TAMED"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/conditions/TAMED"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "FLYING"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/conditions/FLYING"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "HEIGHT"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/conditions/HEIGHT"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "BLOCK"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/conditions/BLOCK"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "ITEM"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/conditions/ITEM"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "OR"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/conditions/OR"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "VISIBILITY"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/conditions/VISIBILITY"
                        }
                    }
                ]
            }
        },
        "effect": {
            "properties": {
                "type": {
                    "enum": [
                        "DAMAGE",
                        "AOE",
                        "VELOCITY",
                        "CANCEL",
                        "GLIDING",
                        "WAIT",
                        "POTION",
                        "WEB",
                        "BLOCKENTITY",
                        "ARROW",
                        "ATTRIBUTE",
                        "LAUNCH",
                        "MESSAGE",
                        "PICKUP",
                        "REPULSE",
                        "RESIZE",
                        "SMITE",
                        "FLING",
                        "METADATA",
                        "GIVEITEM",
                        "SCRAMBLEINVENTORY",
                        "RANDOMTELEPORT",
                        "PROJECTILE",
                        "SOUND",
                        "COMMAND",
                        "LUNGE",
                        "NEAREST",
                        "SHOOTER",
                        "KNOCKBACK",
                        "IGNITE",
                        "TARGET",
                        "SWAP",
                        "LOCATIONCUBE",
                        "PLACEBLOCK",
                        "SPAWNENTITY",
                        "REMOVEPOTION",
                        "TELEPORT",
                        "RAYTRACE",
                        "TIMER",
                        "REMOVEENTITY",
                        "ITEMSTACK",
                        "ITEMAMOUNT",
                        "SWITCHEROO"
                    ],
                    "description": "The type of the effect"
                },
                "mode": {
                    "description": "The effect mode",
                    "type": "string"
                }
            },
            "if": {
                "properties": {
                    "type": {
                        "const": null
                    }
                }
            },
            "else": {
                "allOf": [
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "DAMAGE"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/DAMAGE"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "AOE"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/AOE"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "VELOCITY"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/VELOCITY"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "CANCEL"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/CANCEL"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "GLIDING"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/GLIDING"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "WAIT"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/WAIT"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "POTION"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/POTION"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "WEB"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/WEB"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "BLOCKENTITY"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/BLOCKENTITY"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "ARROW"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/ARROW"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "ATTRIBUTE"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/ATTRIBUTE"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "LAUNCH"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/LAUNCH"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "MESSAGE"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/MESSAGE"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "PICKUP"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/PICKUP"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "REPULSE"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/REPULSE"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "RESIZE"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/RESIZE"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "SMITE"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/SMITE"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "FLING"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/FLING"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "METADATA"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/METADATA"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "GIVEITEM"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/GIVEITEM"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "SCRAMBLEINVENTORY"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/SCRAMBLEINVENTORY"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "RANDOMTELEPORT"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/RANDOMTELEPORT"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "PROJECTILE"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/PROJECTILE"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "SOUND"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/SOUND"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "COMMAND"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/COMMAND"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "LUNGE"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/LUNGE"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "NEAREST"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/NEAREST"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "SHOOTER"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/SHOOTER"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "KNOCKBACK"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/KNOCKBACK"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "IGNITE"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/IGNITE"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "TARGET"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/TARGET"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "SWAP"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/SWAP"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "LOCATIONCUBE"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/LOCATIONCUBE"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "PLACEBLOCK"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/PLACEBLOCK"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "SPAWNENTITY"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/SPAWNENTITY"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "REMOVEPOTION"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/REMOVEPOTION"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "TELEPORT"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/TELEPORT"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "RAYTRACE"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/RAYTRACE"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "TIMER"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/TIMER"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "REMOVEENTITY"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/REMOVEENTITY"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "ITEMSTACK"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/ITEMSTACK"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "ITEMAMOUNT"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/ITEMAMOUNT"
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "SWITCHEROO"
                                }
                            }
                        },
                        "then": {
                            "$ref": "#/effects/SWITCHEROO"
                        }
                    }
                ]
            }
        }
    },
    "skills": {
        "CUSTOM": {
            "properties": {
                "skill": true,
                "trigger": {
                    "$ref": "#/definitions/trigger"
                },
                "effects": {
                    "patternProperties": {
                        ".*": {
                            "$ref": "#/definitions/effect"
                        }
                    },
                    "type": "object",
                    "description": "The list of effetcs"
                }
            },
            "required": []
        }
    },
    "conditions": {
        "HEALTH": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                },
                "minimumHealthPercentage": {
                    "description": "The minimum hp percentage. \nDefaults to 0",
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100,
                    "default": 0
                },
                "maximumHealthPercentage": {
                    "description": "The maximum hp percentage. \nDefaults to 100",
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100,
                    "default": 100
                }
            }
        },
        "CHANCE": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF"
                    ]
                },
                "chance": {
                    "description": "The chance that is used. \nDefaults to 1",
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1,
                    "default": 1
                }
            }
        },
        "COOLDOWN": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF"
                    ]
                },
                "cooldown": {
                    "description": "The cooldown time that is used in seconds. \nDefaults to 10",
                    "type": "number",
                    "default": 10
                }
            }
        },
        "ENTITY": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "OTHER"
                    ]
                },
                "whitelist": {
                    "description": "If true, the entities property will whitelist. If false, the entities property will blacklist. \nDefaults to true",
                    "type": "boolean",
                    "default": true
                },
                "entities": {
                    "description": "The list of entities to be whitelisted/blacklisted. \nDefaults to ",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                }
            }
        },
        "SIZE": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                },
                "minimumSize": {
                    "description": "The minimum size. \nDefaults to 0",
                    "type": "integer",
                    "default": 0
                },
                "maximumSize": {
                    "description": "The maximum size. \nDefaults to 4",
                    "type": "integer",
                    "default": 4
                }
            }
        },
        "NOT": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                },
                "condition": {
                    "description": "The condition to invert",
                    "type": "string"
                }
            },
            "required": [
                "condition"
            ]
        },
        "SNEAK": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                },
                "sneak": {
                    "description": "If true, checks if the entity is shifting. If false, it checks the opposite. \nDefaults to true",
                    "type": "boolean",
                    "default": true
                }
            }
        },
        "TIME": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF"
                    ]
                },
                "minimumTime": {
                    "description": "The minimum time. \nDefaults to 0",
                    "type": "integer",
                    "default": 0
                },
                "maximumTime": {
                    "description": "The maximum time. \nDefaults to 24000",
                    "type": "integer",
                    "default": 24000
                }
            }
        },
        "ONGROUND": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                },
                "grounded": {
                    "description": "If true, checks if the entity is on the ground. If false, it checks the opposite. \nDefaults to true",
                    "type": "boolean",
                    "default": true
                }
            }
        },
        "GLIDING": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF"
                    ]
                },
                "shouldGlide": {
                    "description": "If true, checks if the entity is gliding. If false, it checks the opposite. \nDefaults to true",
                    "type": "boolean",
                    "default": true
                }
            }
        },
        "BIOME": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER",
                        "LOCATION"
                    ]
                },
                "biomes": {
                    "description": "The list of biomes. \nDefaults to ",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                }
            }
        },
        "METADATA": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                },
                "variable": {
                    "description": "The variable to compare",
                    "type": "string"
                }
            },
            "required": [
                "variable"
            ]
        },
        "NPC": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                },
                "isNPC": {
                    "description": "If true, checks if the entity is an npc. If false, it checks the opposite. \nDefaults to false",
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "WEATHER": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF"
                    ]
                }
            }
        },
        "INBLOCK": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                },
                "blocks": {
                    "description": "The list of blocks. \nDefaults to ",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                }
            }
        },
        "WORLD": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER",
                        "LOCATION"
                    ]
                },
                "worlds": {
                    "description": "The list of worlds. \nDefaults to ",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                }
            }
        },
        "TAMED": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "OTHER"
                    ]
                },
                "checkOwner": {
                    "description": "If true, also checks if the player is the owner. \nDefaults to true",
                    "type": "boolean",
                    "default": true
                }
            }
        },
        "FLYING": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                }
            }
        },
        "HEIGHT": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                },
                "height": {
                    "description": "The range in blocks. \nDefaults to -Infinity - Infinity",
                    "type": "string",
                    "default": "-Infinity - Infinity"
                }
            }
        },
        "BLOCK": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "LOCATION"
                    ]
                },
                "materials": {
                    "description": "The list of blocks. \nDefaults to ",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                }
            }
        },
        "ITEM": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER",
                        "ITEM"
                    ]
                },
                "slot": {
                    "description": "The slot to check. \nDefaults to HAND",
                    "type": [
                        "string",
                        "integer"
                    ],
                    "default": "HAND"
                },
                "item": {
                    "description": "The item to check against",
                    "type": "object",
                    "properties": {
                        "types": {
                            "description": "The list of item types. \nDefaults to ",
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": []
                        },
                        "amount": {
                            "description": "The range of item amount. \nDefaults to -Infinity - Infinity",
                            "type": "string",
                            "default": "-Infinity - Infinity"
                        },
                        "metadata": {
                            "description": "The metadata of the item. \nDefaults to [object Object]",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "displayName": {
                                    "description": "A regex to match the display name against. \nDefaults to .+",
                                    "type": "string",
                                    "default": ".+"
                                },
                                "lore": {
                                    "description": "A list of regex to match the lore against. \nDefaults to .+",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "default": ".+"
                                },
                                "enchants": {
                                    "description": "The item to check against. \nDefaults to [object Object]",
                                    "type": "object",
                                    "default": {}
                                }
                            }
                        }
                    }
                }
            },
            "required": [
                "item"
            ]
        },
        "OR": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                },
                "conditions": {
                    "description": "The conditions to OR. \nDefaults to [object Object]",
                    "type": "object",
                    "default": {},
                    "properties": {
                        "\\w": {
                            "description": "A condition to OR. \nDefaults to [object Object]",
                            "type": "string",
                            "default": {}
                        }
                    }
                }
            }
        },
        "VISIBILITY": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "OTHER"
                    ]
                },
                "maxDistance": {
                    "description": "The maximum distance to the entity. \nDefaults to 16",
                    "type": "number",
                    "default": 16
                }
            }
        }
    },
    "effects": {
        "DAMAGE": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                },
                "damage": {
                    "description": "The damage that will be dealt. \nDefaults to 5",
                    "type": "number",
                    "default": 5
                }
            }
        },
        "AOE": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF"
                    ]
                },
                "radius": {
                    "description": "Half the side length of the box. \nDefaults to 5",
                    "type": "number",
                    "default": 5
                }
            }
        },
        "VELOCITY": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                },
                "velocity": {
                    "description": "The Y velocity to set to. \nDefaults to 1",
                    "type": "number",
                    "default": 1
                }
            }
        },
        "CANCEL": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF"
                    ]
                }
            }
        },
        "GLIDING": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                },
                "glide": {
                    "description": "If true, makes the player or entity glide. Else if false, makes the player or entity stop gliding. \nDefaults to false",
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "WAIT": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER",
                        "LOCATION"
                    ]
                },
                "delay": {
                    "description": "The delay time in seconds (1 is 20 ticks). \nDefaults to 1",
                    "type": "number",
                    "default": 1
                }
            }
        },
        "POTION": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                },
                "potion": {
                    "description": "The potion effect. \nDefaults to [object Object]",
                    "type": "object",
                    "default": {
                        "type": "REGENERATION",
                        "potency": 1,
                        "duration": 10
                    },
                    "properties": {
                        "potency": {
                            "description": "The potency or amplifier of the potion. \nDefaults to 1",
                            "type": "integer",
                            "default": 1
                        },
                        "type": {
                            "description": "The type of the potion",
                            "type": "string"
                        },
                        "duration": {
                            "description": "The duration of the potion in seconds (1 is 20 ticks). 0 is for infinite duration (Integer maximum ticks). \nDefaults to 10",
                            "type": "number",
                            "default": 10
                        }
                    },
                    "required": [
                        "type"
                    ]
                }
            }
        },
        "WEB": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "OTHER"
                    ]
                },
                "duration": {
                    "description": "The duration of time that the block will be there in seconds (1 is 20 ticks). If less than 0, the block will not change back. \nDefaults to -1",
                    "type": "number",
                    "default": -1
                },
                "block": {
                    "description": "The block to change to. \nDefaults to COBWEB",
                    "type": "string",
                    "default": "COBWEB"
                }
            }
        },
        "BLOCKENTITY": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "OTHER"
                    ]
                },
                "duration": {
                    "description": "The duration of time that the block will be there in seconds (1 is 20 ticks). If less than 0, the block will not change back. \nDefaults to -1",
                    "type": "number",
                    "default": -1
                },
                "block": {
                    "description": "The block to change to. \nDefaults to COBWEB",
                    "type": "string",
                    "default": "COBWEB"
                }
            }
        },
        "ARROW": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER",
                        "LOCATION"
                    ]
                },
                "velocity": {
                    "description": "Used to determine the time that it takes to hit by (pythagoras distance)/velocity. \nDefaults to 1",
                    "type": "number",
                    "default": 1
                },
                "entity": {
                    "description": "The entity to shoot. \nDefaults to arrow",
                    "type": "string",
                    "default": "arrow"
                },
                "damage": {
                    "description": "If projectile entity is an arrow, the damage that the arrow will do. \nDefaults to 4",
                    "type": "integer",
                    "default": 4
                }
            }
        },
        "ATTRIBUTE": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                },
                "attribute": {
                    "description": "The attribute to modify. The name of the attribute should exclude the \"GENERIC_\" in the begining",
                    "type": "string"
                }
            },
            "required": [
                "attribute"
            ]
        },
        "LAUNCH": {
            "properties": {
                "type": {
                    "description": "The entity to launch. \nDefaults to FIREBALL",
                    "type": "string",
                    "default": "FIREBALL"
                },
                "mode": {
                    "enum": [
                        "ALL",
                        "OTHER"
                    ]
                },
                "velocity": {
                    "description": "The velocity to launch at. \nDefaults to 1",
                    "type": "number",
                    "default": 1
                }
            }
        },
        "MESSAGE": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                },
                "message": {
                    "description": "The message to send. The first occurence of \"player\" will be replaced by the player name",
                    "type": "string"
                }
            },
            "required": [
                "message"
            ]
        },
        "PICKUP": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "OTHER"
                    ]
                }
            }
        },
        "REPULSE": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "OTHER"
                    ]
                },
                "velocity": {
                    "description": "The velocity to repulse the target entity. Positive value means into the user. Negative value means away from the user. \nDefaults to 1",
                    "type": "number",
                    "default": 1
                }
            }
        },
        "RESIZE": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                },
                "retainHealth": {
                    "description": "For slimes and magma cubes. If true, make it retain the previous health (if more than the new max health, it sets it to the max health). \nDefaults to true",
                    "type": "boolean",
                    "default": true
                }
            }
        },
        "SMITE": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                },
                "fake": {
                    "description": "If true, it only makes the effect of lightning, not summoning an actual lightning. \nDefaults to false",
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "FLING": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                },
                "velocity": {
                    "description": "The Y velocity to set to. \nDefaults to 1",
                    "type": "number",
                    "default": 1
                }
            }
        },
        "METADATA": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                },
                "variable": {
                    "description": "The name of the variable",
                    "type": "string"
                },
                "operation": {
                    "description": "The operation to do",
                    "type": "string"
                },
                "value": {
                    "description": "The number on the right side of the operation. \nDefaults to 1",
                    "type": "number",
                    "default": 1
                }
            },
            "required": [
                "variable",
                "operation"
            ]
        },
        "GIVEITEM": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                },
                "dropIfFull": {
                    "description": "If true, drops the items that did not fit into the inventory. \nDefaults to true",
                    "type": "boolean",
                    "default": true
                },
                "item": {
                    "description": "The item to give",
                    "type": "object",
                    "properties": {
                        "type": {
                            "description": "The type of item. \nDefaults to STONE",
                            "type": "string",
                            "default": "STONE"
                        },
                        "amount": {
                            "description": "The amount of item to give. \nDefaults to 1",
                            "type": "integer",
                            "default": 1
                        },
                        "metadata": {
                            "description": "The metadata of the item. \nDefaults to [object Object]",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "displayName": {
                                    "description": "The display name of the item. Defaults to the normal item name",
                                    "type": "string",
                                    "default": ""
                                },
                                "lore": {
                                    "description": "The lore of the item. \nDefaults to ",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "default": []
                                },
                                "isUnbreakable": {
                                    "description": "If true, makes the item unbreakable. \nDefaults to false",
                                    "type": "boolean",
                                    "default": false
                                },
                                "durability": {
                                    "description": "The durability of the item. 0 is normal durability. \nDefaults to 0",
                                    "type": "integer",
                                    "default": 0
                                },
                                "attributes": {
                                    "description": "The enchantments. \nDefaults to [object Object]",
                                    "type": "object",
                                    "default": {}
                                },
                                "enchants": {
                                    "description": "The enchantments. \nDefaults to [object Object]",
                                    "type": "object",
                                    "default": {}
                                },
                                "color": {
                                    "description": "If type is a leather armour. This contains the color metadata of the item. \nDefaults to [object Object]",
                                    "type": "object",
                                    "default": {},
                                    "required": [
                                        "red",
                                        "green",
                                        "blue"
                                    ],
                                    "properties": {
                                        "red": {
                                            "description": "The red value",
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 255
                                        },
                                        "green": {
                                            "description": "The green value",
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 255
                                        },
                                        "blue": {
                                            "description": "The blue value",
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 255
                                        }
                                    }
                                },
                                "potion": {
                                    "description": "If type is a potion, splash potion, lingering potion, or tipped arrow. This contains the potion metadata of the item. \nDefaults to [object Object]",
                                    "type": "object",
                                    "default": {},
                                    "required": [
                                        "type"
                                    ],
                                    "properties": {
                                        "type": {
                                            "description": "The type of potion",
                                            "type": "string"
                                        },
                                        "extended": {
                                            "description": "Whether the potion is extended. \nDefaults to false",
                                            "type": "boolean",
                                            "default": false
                                        },
                                        "upgraded": {
                                            "description": "Whether the potion is upgraded. \nDefaults to false",
                                            "type": "boolean",
                                            "default": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "required": [
                "item"
            ]
        },
        "SCRAMBLEINVENTORY": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                }
            }
        },
        "RANDOMTELEPORT": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                },
                "minDistance": {
                    "description": "The minimum distance. \nDefaults to 5",
                    "type": "number",
                    "default": 5
                },
                "maxDistance": {
                    "description": "The maximum distance. \nDefaults to 5",
                    "type": "number",
                    "default": 5
                }
            }
        },
        "PROJECTILE": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER",
                        "LOCATION"
                    ]
                },
                "entity": {
                    "description": "The entity to shoot",
                    "type": "object",
                    "properties": {
                        "type": {
                            "description": "The entity type. \nDefaults to ZOMBIE",
                            "type": "string",
                            "default": "ZOMBIE"
                        },
                        "nametag": {
                            "description": "The nametag of the spawned entity. Defaults to no nametag",
                            "type": "string",
                            "default": ""
                        },
                        "shouldDespawn": {
                            "description": "If true, the entity can despawn. \nDefaults to true",
                            "type": "boolean",
                            "default": true
                        },
                        "passenger": {
                            "description": "The passanger of the entity. \nDefaults to [object Object]",
                            "type": "object",
                            "default": {}
                        }
                    }
                },
                "velocity": {
                    "description": "The shooting velocity. \nDefaults to 1",
                    "type": "number",
                    "default": 1
                }
            },
            "required": [
                "entity"
            ]
        },
        "SOUND": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER",
                        "LOCATION"
                    ]
                },
                "sound": {
                    "description": "The sound data",
                    "type": "object",
                    "properties": {
                        "sound": {
                            "description": "The sound to make. \nDefaults to ENTITY_GENERIC_EXPLODE",
                            "type": "string",
                            "default": "ENTITY_GENERIC_EXPLODE"
                        },
                        "volume": {
                            "description": "The volume of the sound. \nDefaults to 1",
                            "type": "number",
                            "default": 1
                        },
                        "pitch": {
                            "description": "The pitch of the sound. \nDefaults to 1",
                            "type": "number",
                            "default": 1
                        }
                    }
                }
            },
            "required": [
                "sound"
            ]
        },
        "COMMAND": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                },
                "executor": {
                    "description": "The executor that will execute the command. \nDefaults to CONSOLE",
                    "type": "string",
                    "enum": [
                        "CONSOLE",
                        "PLAYER"
                    ],
                    "default": "CONSOLE"
                },
                "command": {
                    "description": "The command to execute. \"%self_name%\" will be interpreted as the user if the user is a player. Otherwise, \"%target_name%\" will be interpreted as the target entity if the target entity is a player",
                    "type": "string"
                }
            },
            "required": [
                "command"
            ]
        },
        "LUNGE": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                },
                "horizontalVelocity": {
                    "description": "The scale to scale the horizontal components of the velocity vector. \nDefaults to 0",
                    "type": "number",
                    "default": 0
                },
                "verticalVelocity": {
                    "description": "The scale to scale the vertical components of the velocity vector. \nDefaults to 0",
                    "type": "number",
                    "default": 0
                },
                "overwrite": {
                    "description": "If true, sets the velocity vector. If false, adds to the velocity vector. \nDefaults to true",
                    "type": "boolean",
                    "default": true
                }
            }
        },
        "NEAREST": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER",
                        "LOCATION"
                    ]
                },
                "radius": {
                    "description": "Half the side length of the box. \nDefaults to 5",
                    "type": "number",
                    "default": 5
                }
            }
        },
        "SHOOTER": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER",
                        "LOCATION"
                    ]
                },
                "onlyProjectiles": {
                    "description": "If true, only excecutes the inside effects if the original target entity is a projectile. If false, forwards the original target entity to the inside conditions and effects. \nDefaults to true",
                    "type": "boolean",
                    "default": true
                }
            }
        },
        "KNOCKBACK": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "OTHER"
                    ]
                },
                "multiplier": {
                    "description": "The velocity to apply. \nDefaults to 1",
                    "type": "number",
                    "default": 1
                },
                "overwriteCurrentVelocity": {
                    "description": "If true, sets the target's velocity. If false, adds to the target's original velocity. \nDefaults to true",
                    "type": "boolean",
                    "default": true
                }
            }
        },
        "IGNITE": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                },
                "fireTicks": {
                    "description": "The amount of time the fire will last (in ticks). \nDefaults to 0",
                    "type": "integer",
                    "default": 0
                }
            }
        },
        "TARGET": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "OTHER"
                    ]
                }
            }
        },
        "SWAP": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "OTHER"
                    ]
                }
            }
        },
        "LOCATIONCUBE": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER",
                        "LOCATION"
                    ]
                }
            }
        },
        "PLACEBLOCK": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "LOCATION"
                    ]
                },
                "material": {
                    "description": "The block to replace to. \nDefaults to STONE",
                    "type": "string",
                    "default": "STONE"
                },
                "updatePhysics": {
                    "description": "If false, does not update neighboring blocks. \nDefaults to true",
                    "type": "boolean",
                    "default": true
                },
                "revertsAfter": {
                    "description": "Time before the block reverts to the original block in seconds (1 is 20 ticks). If less than or equal to 0, does not revert the original block. \nDefaults to -1",
                    "type": "number",
                    "default": -1
                }
            }
        },
        "SPAWNENTITY": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER",
                        "LOCATION"
                    ]
                }
            }
        },
        "REMOVEPOTION": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                },
                "types": {
                    "description": "The list of potion types. If empty, removes all potion effect. \nDefaults to ",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                }
            }
        },
        "TELEPORT": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "OTHER",
                        "LOCATION"
                    ]
                }
            }
        },
        "RAYTRACE": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER",
                        "LOCATION"
                    ]
                }
            }
        },
        "TIMER": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER",
                        "LOCATION"
                    ]
                }
            }
        },
        "REMOVEENTITY": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER"
                    ]
                }
            }
        },
        "ITEMSTACK": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER",
                        "LOCATION"
                    ]
                }
            }
        },
        "ITEMAMOUNT": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "ITEM"
                    ]
                }
            }
        },
        "SWITCHEROO": {
            "properties": {
                "type": true,
                "mode": {
                    "enum": [
                        "ALL",
                        "SELF",
                        "OTHER",
                        "LOCATION"
                    ]
                }
            }
        }
    }
}