{
	"$schema": "http://json-schema.org/schema",
	"type": "object",
	"properties": {
		"conditions": {
			"type": "object",
			"description": "The list of condition types and their properties that is in the skills library",
			"patternProperties": {
				"\\p{Upper}": {
					"type": "object",
					"description": "A condition type and it's properties",
					"properties": {
						"supportedModes": {
							"type": "array",
							"description": "The list of supported modes",
							"items": {
								"type": "string",
								"enum": ["SELF", "OTHER", "LOCATION", "ITEM", "ALL"],
								"description": "The supported mode"
							}
						},
						"description": true,
						"typeProperties": true,
						"available": true,
						"extends": true
					},
					"allOf": [{ "$ref": "#/definitions/type" }],
					"additionalProperties": false
				}
			},
			"additionalProperties": false
		},
		"effects": {
			"type": "object",
			"description": "The list of effect types and their properties that is in the skills library",
			"patternProperties": {
				"\\p{Upper}": {
					"type": "object",
					"description": "An effect type and it's properties",
					"properties": {
						"supportedModes": {
							"type": "array",
							"description": "The list of supported modes",
							"items": {
								"type": "string",
								"enum": ["SELF", "OTHER", "LOCATION", "ITEM", "ALL"],
								"description": "The supported mode"
							}
						},
						"description": true,
						"typeProperties": true,
						"available": true,
						"extends": true
					},
					"allOf": [{ "$ref": "#/definitions/type" }],
					"additionalItems": false
				}
			},
			"additionalProperties": false
		},
		"types": {
			"type": "object",
			"description": "The list of types and their definitions that is in the skills library",
			"patternProperties": {
				".*": {
					"type": "object",
					"description": "A type and definition",
					"properties": {
						"description": { "$ref": "#/definitions/property/properties/description" },
						"type": { "$ref": "#/definitions/property/properties/type" },
						"properties": { "$ref": "#/definitions/property/properties/properties" },
						"patternProperties": { "$ref": "#/definitions/property/properties/patternProperties" },
						"propertiesMap": { "$ref": "#/definitions/property/properties/propertiesMap" },
						"ref": { "$ref": "#/definitions/property/properties/ref" },
						"enum": { "$ref": "#/definitions/property/properties/enum" },
						"pattern": { "$ref": "#/definitions/property/properties/pattern" },
						"internal": {
							"type": "boolean",
							"description": "If true, this type is managed internally"
						}
					},
					"additionalItems": false,
					"default": {}
				}
			},
			"additionalProperties": false
		}
	},
	"definitions": {
		"type": {
			"properties": {
				"description": {
					"type": "string",
					"description": "The description of this type"
				},
				"typeProperties": {
					"type": "object",
					"description": "The list of properties",
					"patternProperties": {
						"\\w*": {
							"description": "The property",
							"$ref": "#/definitions/property"
						}
					},
					"additionalProperties": false
				},
				"available": {
					"type": "boolean",
					"description": "If true, this is available for use",
					"default": true
				},
				"extends": {
					"type": "string",
					"description": "The type that this type is extending"
				}
			},
			"required": ["description"],
			"allOf": [
				{
					"if": {
						"properties": { "available": {"const": false }}
					},
					"else": {
						"required": ["supportedModes"]
					}
				}
			]
		},
		"property": {
			"type": "object",
			"properties": {
				"description": {
					"type": "string",
					"description": "The description of the property"
				},
				"default": {
					"type": ["object", "array", "string", "number", "integer", "boolean", "null"],
					"description": "The default value that this property falls to if not provided"
				},
				"required": {
					"type": "boolean",
					"description": "Tells if the property is required or not"
				},
				"type": {
					"type": ["string", "array"],
					"items": {
						"type": "string",
						"$ref": "#/definitions/types"
					},
					"minItems": 1,
					"description": "The type of value(s) the property can accept"
				},
				"min": {
					"type": "number",
					"description": "If the type is either a number of integer, it tells the minimum acceptable value"
				},
				"max": {
					"type": "number",
					"description": "If the type is either a number of integer, it tells the maximum acceptable value"
				},
				"items": {
					"type": ["string", "array"],
					"items": {
						"type": "string",
						"$ref": "#/definitions/types"
					},
					"minItems": 1,
					"description": "For arrays, contains the types of items allowed"
				},
				"properties": {
					"type": "object",
					"patternProperties": {
						"\\w*": {"$ref": "#/definitions/property"}
					},
					"description": "The properties that this property has"
				},
				"patternProperties": {
					"type": "object",
					"patternProperties": {
						".*": {"$ref": "#/definitions/property"}
					},
					"description": "The properties (in form of regex) that this property has"
				},
				"propertiesMap": {
					"type": "array",
					"description": "The properties (in form of regex) that this property has",
					"items": {
						"type": "object",
						"description": "",
						"properties": {
							"key": {
								"type": "object",
								"description": "Specify the type(s) that the key has",
								"properties": {
									"description": {
										"type": "string",
										"description": "The description of the key"
									},
									"type": {
										"type": ["string", "array"],
										"items": {
											"type": "string",
											"$ref": "#/definitions/stringTypes"
										},
										"minItems": 1,
										"description": "The type of value(s) the key can be"
									}
								},
								"if": {
									"properties": { "type": { "type": "string" }}
								},
								"then": {
									"properties": { "type": { "$ref": "#/definitions/stringTypes" }}
								}
							},
							"value": {
								"$ref": "#/definitions/property",
								"description": "Specify the type(s) that the value has"
							}
						}
					}
				},
				"ref": {
					"type": "string",
					"description": "Refrences a definition"
				},
				"if": {
					"$ref": "#/definitions/if"
				},
				"enum": {
					"type": "array",
					"description": "List of available values",
					"minItems": 1
				},
				"pattern": {
					"type": "string",
					"description": "A regex to match the string againt"
				}
			},
			"required": ["description", "required", "type"],
			"allOf": [
				{
					"if": {
						"properties": { "required": { "const": true }}
					},
					"else": {
						"required": ["default"]
					}
				},
				{
					"if": {
						"properties": { "type": { "const": "array" }}
					},
					"then": {
						"required": ["items"]
					}
				},
				{
					"if": {
						"properties": { "type": { "const": "object" }}
					},
					"then": {
						"anyOf": [
							{
								"required": ["properties"]
							},
							{
								"required": ["patternProperties"]
							},
							{
								"required": ["propertiesMap"]
							}
						]
					}
				},
				{
					"if": {
						"properties": { "items": { "type": "string" }}
					},
					"then": {
						"properties": { "items": { "$ref": "#/definitions/types" }}
					}
				},
				{
					"if": {
						"properties": { "type": { "type": "string" }}
					},
					"then": {
						"properties": { "type": { "$ref": "#/definitions/types" }}
					}
				}
			]
		},
		"types": {
			"anyOf": [
				{
					"enum": [
						"array", "object", 
						"string", "number", "integer", "boolean"
					]
				},
				{
					"$ref": "#/definitions/stringTypes"
				}
			]
		},
		"stringTypes": {
			"enum": [
				"string", 
				"range", "comparison", "operation", 
				"entity", "block", "item", 
				"enchantment", "potion", 
				"biome", "world", 
				"equipmentSlot", 
				"attribute", 
				"sound", 
				"condition", "effect"
			]
		},
		"if": {
			"type": "object",
			"description": "Conditions this property",
			"$ref": "#/definitions/ifPath"
		},
		"ifPath": {
			"$ref": "#/definitions/ifComparison",
			"patternProperties": {
				"\\w+": {
					"type": "object",
					"$ref": "#/definitions/ifPath"
				}
			}
		},
		"ifComparison": {
			"properties": {
				"const": {
					"type": ["array", "boolean", "integer", "null", "number", "string"],
					"description": "The constant to validate againt, or constants if it is an array",
					"items": {
						"type": ["boolean", "integer", "null", "number", "string"]
					}
				}
			}
		}
	}
}
